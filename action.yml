apiVersion: automation.cloudbees.io/v1alpha1
kind: action
name: jfrog-xray
inputs:
  registryURL:
    required: true
  username:
    required: true
  password:
    required: true
  image-location:
    required: true
  image-tag:
    required: true
runs:
  using: composite
  steps:
    - id: jfrog-xray
      name: jfrog-xray
      uses: docker://registry.saas-dev.beescloud.com/staging/compliance-xray:27
      shell: bash
      env:
        RUN_ID: ${{ cloudbees.run_id }}
        JOB_ID: ${{ job.id }}
        STEP_ID: ${{ step.internal.id}}
        DNS_URL: ${{ cloudbees.api.url }}
        JWT_TOKEN: ${{ cloudbees.api.token }}
        BINARY_IMAGE_NAME: "xray_binary_asset.tar"
        CONFIG_JSON: '{\"metaInfo\":{\"url\":\"${{ inputs.registryURL }}\",\"username\":\"${{ inputs.username }}\",\"password\":\"${{ inputs.password }}\",\"client_secret\":\"NA\",\"scope\":\"${{ vars.JFROG_SCOPE }}\",\"toolName\":\"xray\"},\"orchestratorInfo\":{\"assetType\":\"BINARY\",\"assetIdentifier\":\"${{ inputs.image-location }}\"},\"metaInformation\":{\"actor\":\"${{ cloudbees.event.head_commit.author.username }}\",\"commit_id\":\"NA\",\"tenent_info\":\"NA\",\"scanner_type\":\"SCA\",\"pipeline_info\":{\"id\":\"04612\",\"name\":\"test_pipeline\",\"step_id\":\"04612_test_pipeline\"}}}'
      run: |
        set -x
        echo "RUN ID: ${{ cloudbees.run_id }}"
        echo "Job ID: ${{ job.id }}"
        echo "Step ID: ${{step.internal.id}}"
        echo "DNS URL: ${{ cloudbees.api.url }}"
        echo "JWT TOKEN: ${{ cloudbees.api.token }}"
        cd /
        crane flatten ${{ inputs.image-location }}:${{ inputs.image-tag }}
        skopeo copy docker://${{ inputs.image-location }}:${{ inputs.image-tag }} docker-archive:$CLOUDBEES_WORKSPACE/$BINARY_IMAGE_NAME:${{ inputs.image-location }}:${{ inputs.image-tag }}
        /bin/bash -c "java -jar ./executables/xray.jar & while ! nc -z localhost 5001; do sleep 1; done && ./executables/orchestrator -scanConfig \"${CONFIG_JSON}\" execute-analyser && exit"
